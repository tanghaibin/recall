<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- datasource  -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${recall.datasource.password}" />
		<property name="maxActive" value="${datasource.maxActive}" />
		<property name="maxWait" value="${datasource.maxWait}" />

		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- <property name="poolPreparedStatements" value="false" /> -->
		<property name="maxPoolPreparedStatementPerConnectionSize" value="500" />
	</bean>
	<bean id="persistenceUnitManager" class="org.springframework.data.jpa.support.MergingPersistenceUnitManager ">
		<property name="persistenceXmlLocations">
			<list value-type="java.lang.String">
				<value>classpath*:META-INF/persistence.xml</value>
			</list>
		</property>
	</bean>
	<bean id="jpaEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="top.tanghaibin.recall.dao.po"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true"/>
				<property name="generateDdl" value="true"/>
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultComponentSafeNamingStrategy</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.CharSet">utf8</prop>
				<prop key="hibernate.connection.characterEncoding">utf8</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.transaction.flush_before_completion">true</prop>
				<prop key="hibernate.c3p0.preferredTestQuery">SELECT 1</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">true</prop>
				<prop key="hibernate.c3p0.idleConnectionTestPeriod">60</prop>
			</props>
		</property>
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="persistenceUnitName" value="recall" />
	</bean>
	<!-- redis-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"></bean>
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="database" value="${redis.database}"></property>
		<property name="hostName" value="${redis.hostName}"></property>
		<!--<property name="password" value="${redis.password}"></property>-->
		<property name="port" value="${redis.port}"></property>
		<property name="timeout" value="${redis-timeout}"></property>
		<property name="poolConfig" ref="jedisPoolConfig"></property>
	</bean>
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
	<bean class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
		<property name="keySerializer" ref="stringRedisSerializer"></property>
	</bean>
	<!-- transaction -->
	<!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource"/>-->
	<!--</bean>-->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="create*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />-->
			<!--<tx:method name="del*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>-->
			<!--<tx:method name="update*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->
	<!--<aop:config proxy-target-class="true" expose-proxy="true">-->
		<!--<aop:pointcut id="uc" expression="execution(* top.tanghaibin.recall.service..*(..))" />-->
		<!--<aop:advisor pointcut-ref="uc" advice-ref="txAdvice" />-->
	<!--</aop:config>-->
</beans>